[debug] 
[debug] Initial source changes: 
[debug] 	removed:Set(F:\IT projet\RolePlayingHelper\project\HelloWorld.scala)
[debug] 	added: Set()
[debug] 	modified: Set()
[debug] Invalidated products: Set()
[debug] External API changes: API Changes: Set()
[debug] Modified binary dependencies: Set(C:\Users\Arthur\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\io\github\sugakandrey\scala-compiler-indices-protocol_2.12\0.1.1\scala-compiler-indices-protocol_2.12-0.1.1.jar, C:\Users\Arthur\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\io\spray\spray-json_2.12\1.3.4\spray-json_2.12-1.3.4.jar, C:\Users\Arthur\.IdeaIC2019.3\config\plugins\Scala\repo\org.jetbrains\sbt-structure-extractor\scala_2.12\sbt_1.0\2018.2.1+4-88400d3f\jars\sbt-structure-extractor.jar, C:\Users\Arthur\.IdeaIC2019.3\config\plugins\Scala\repo\org.jetbrains\sbt-idea-compiler-indices\scala_2.12\sbt_1.0\0.1.3\jars\sbt-idea-compiler-indices.jar, C:\Users\Arthur\.IdeaIC2019.3\config\plugins\Scala\repo\org.jetbrains\sbt-idea-shell\scala_2.12\sbt_1.0\2018.3\jars\sbt-idea-shell.jar)
[debug] Initial directly invalidated classes: Set(HelloWorld)
[debug] 
[debug] Sources indirectly invalidated by:
[debug] 	product: Set()
[debug] 	binary dep: Set()
[debug] 	external source: Set()
[debug] All sources are invalidated.
[debug] Initial set of included nodes: HelloWorld
[debug] Recompiling all sources: number of invalidated sources > 50.0% of all sources
[debug] Invalidating (transitively) by inheritance from HelloWorld...
[debug] Initial set of included nodes: HelloWorld
[debug] Invalidated by transitive inheritance dependency: Set(HelloWorld)
[debug] Change NamesChange(HelloWorld,ModifiedNames(changes = UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(HelloWorld,[Default]), UsedName(hashCode,[Default]), UsedName(main,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The HelloWorld has the following regular definitions changed:
[debug] 	UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(HelloWorld,[Default]), UsedName(hashCode,[Default]), UsedName(main,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(clone,[Default]), UsedName(asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]).
[debug] 	> by transitive inheritance: Set(HelloWorld)
[debug] 	> 
[debug] 	> 
[debug]         
[debug] New invalidations:
[debug] 	Set()
[debug] Initial set of included nodes: 
[debug] Previously invalidated, but (transitively) depend on new invalidations:
[debug] 	Set()
[debug] No classes were invalidated.
